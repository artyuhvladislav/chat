{"version":3,"sources":["socket.js","components/JoinBlock.jsx","reducer.js","components/Chat.jsx","App.js","index.js"],"names":["socket","io","JoinBlock","onLogin","React","useState","roomID","setRoomID","userName","setUserName","isLoading","setIsLoading","className","type","placeholder","value","onChange","e","target","disabled","onClick","alert","obj","axios","post","then","reducer","state","action","joined","payload","users","messages","Chat","onAddMessage","messageValue","setMessageValue","messageRef","useRef","useEffect","current","scrollTo","length","map","name","index","ref","message","text","rows","emit","App","useReducer","dispatch","setUsers","addMessage","on","get","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b4688d.chunk.js","sourcesContent":["import io from 'socket.io-client'\r\n\r\nconst socket = io()\r\n\r\nexport default socket","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport socket from \"../socket\";\r\nconst JoinBlock = ({ onLogin }) => {\r\n  const [roomID, setRoomID] = React.useState(\"\");\r\n  const [userName, setUserName] = React.useState(\"\");\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  const onEnter = () => {\r\n    if (!roomID || !userName) {\r\n      return alert(\"data is not correct\");\r\n    }\r\n    const obj = {\r\n      roomID, \r\n      userName\r\n    }\r\n    setIsLoading(true)\r\n    axios\r\n      .post(\"/rooms\", {\r\n        userName,\r\n        roomID,\r\n      })\r\n      .then(() => {\r\n        onLogin(obj);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"join-block\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"roomID\"\r\n        value={roomID}\r\n        onChange={(e) => setRoomID(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"userName\"\r\n        value={userName}\r\n        onChange={(e) => setUserName(e.target.value)}\r\n      />\r\n      <button\r\n        disabled={isLoading}\r\n        className=\"btn btn-success\"\r\n        onClick={onEnter}\r\n      >\r\n        {isLoading ? \"CONNECTION...\" : \"CONNECT\"}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JoinBlock;\r\n","const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"JOINED\":\r\n      return {\r\n        ...state,\r\n        joined: true,\r\n        userName: action.payload.userName,\r\n        roomID: action.payload.roomID,\r\n      };\r\n\r\n    case \"SET_USERS\":\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n      };\r\n\r\n    case \"NEW_MESSAGES\":\r\n      return {\r\n        ...state,\r\n        messages: [...state.messages, action.payload],\r\n      };\r\n\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        users: action.payload.users,\r\n        messages: action.payload.messages,\r\n      };\r\n      \r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default reducer;\r\n","import React from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nfunction Chat({ users, messages, roomID, userName, onAddMessage }) {\r\n  const [messageValue, setMessageValue] = React.useState(\"\");\r\n  const messageRef = React.useRef(null)\r\n  const onSendMessage = () => {\r\n    socket.emit(\"ROOM:NEW_MESSAGES\", {\r\n      userName,\r\n      roomID,\r\n      text: messageValue,\r\n    });\r\n    onAddMessage({\r\n      userName,\r\n      text: messageValue,\r\n    });\r\n    setMessageValue(\"\");\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    messageRef.current.scrollTo(0, 9999)\r\n  }, [messages])\r\n  return (\r\n    <div className=\"chat\">\r\n      <div className=\"chat-users\">\r\n        Комната: <b>{roomID}</b>\r\n        <hr />\r\n        <b>Онлайн ({users.length}):</b>\r\n        <ul>\r\n          {users.map((name, index) => (\r\n            <li key={name + index}>{name}</li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n      <div className=\"chat-messages\">\r\n        <div ref={messageRef} className=\"messages\">\r\n          {messages.map((message) => (\r\n            <div className={(userName === message.userName) ? 'usersMessage message' : 'message'}>\r\n              <p>{message.text}</p>\r\n              <div>\r\n                <span>{message.userName}</span>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n        <form>\r\n          <textarea\r\n            value={messageValue}\r\n            onChange={(e) => setMessageValue(e.target.value)}\r\n            className=\"form-control\"\r\n            rows=\"3\"\r\n          ></textarea>\r\n          <button\r\n            onClick={onSendMessage}\r\n            type=\"button\"\r\n            className=\"btn btn-primary\"\r\n          >\r\n            Отправить\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react'\n\nimport JoinBlock from './components/JoinBlock';\nimport socket from './socket'\nimport reducer from './reducer'\nimport './index.css';\nimport Chat from './components/Chat';\nimport axios from 'axios';\n\n\nconst App = () => {\n\n  const [state, dispatch] = React.useReducer(reducer, {\n    joined: false,\n    roomID: null,\n    userName: null,\n    users: [],\n    messages: [],\n  })\n  \n  const onLogin = (obj) => {\n    dispatch({\n      type: 'JOINED',\n      payload: obj\n    })\n    socket.emit('ROOM:JOIN', obj)\n    axios.get(`rooms/${obj.roomID}`).then(({data}) => {\n      dispatch({\n        type: 'SET_DATA',\n        payload: data,\n      })\n    })\n  }\n\n   const setUsers = (users) => {\n    dispatch({\n      type: 'SET_USERS',\n      payload: users,\n    });\n  };\n  const addMessage = (message) => {\n    dispatch({\n      type: 'NEW_MESSAGES',\n      payload: message,\n    });\n  }\n  React.useEffect(() => {\n    socket.on('ROOM:NEW_MESSAGES', addMessage)\n    socket.on('ROOM:SET_USERS', setUsers);\n    \n  }, [])\n  \n  return (\n   <div className=\"wrapper\">\n     {!state.joined ? <JoinBlock onLogin={onLogin} /> : <Chat {...state}  onAddMessage={addMessage} /> }\n   </div>\n  )\n}\n\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}